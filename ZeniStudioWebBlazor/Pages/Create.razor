@page "/create"
@using Microsoft.AspNetCore.Authorization
@using ZeniStudioWebBlazor.Data
@using ZeniStudioWebBlazor.Servicios

@attribute [Authorize]
@inject ProyectService proyecserv
@inject CategoriaService categoriaservice
@inject NavigationManager navegate


<table class="table">
    <tr>
        <td>Categoría: </td>
        <td><input type="text" @bind="proyecto.idCategoria" /> </td>
        <td style="text-align:center">
            <input type="submit" value="Recomendar" @onclick="Recomendar" />
         
        </td>
    </tr>
    <tr>
        <td>Codigo:</td>
        <td><input type="text" @bind="proyecto.CodigoProyecto" /> </td>
    </tr>
    <tr>
        <td>Nombre:</td>
        <td><input type="text" @bind="proyecto.nombre" /> </td>
    </tr>

    <tr>
        <td>Cliente</td>
        <td><input type="text" @bind="proyecto.idCliente" /> </td>
    </tr>
    <tr>
        <td>Estado:</td>
        <td><input type="text" @bind="proyecto.idEstado" /> </td>
    </tr>
    <tr>
        <td>Prioridad:</td>
        <td><input type="text" @bind="proyecto.prioridad" /> </td>
    </tr>
    <tr>
        <td>Fecha Creación:</td>
        <td><input type="text" @bind="proyecto.fechaCreacion" /> </td>
    </tr>
    <tr>
        <td>Fecha Inicio:</td>
        <td><input type="text" @bind="proyecto.fechaInicio" /> </td>
    </tr>
    <tr>
        <td>Fecha Fin:</td>
        <td><input type="text" @bind="proyecto.fechaFin" /> </td>
    </tr>
    <tr>
        <td>Razón de Cancelación:</td>
        <td><input type="text" @bind="proyecto.razonCancelacion" /> </td>
    </tr>

    <tr>
        <td colspan="2" style="text-align:center">
            <input type="submit" value="Save" @onclick="SaveProyect" />
            <a class="btn" href="/" />

        </td>
    </tr>

</table>


<div>
    <a asp-page="./Index">Back to List</a>
</div>


@code {


    public bool guardado = false;


    Proyect proyecto = new();
    [Parameter]
    public string CodigoProyecto{ get; set; }

    protected async Task SaveProyect()
    {
        if (string.IsNullOrEmpty(proyecto.CodigoProyecto)){
            return;
        }
        guardado = true;
        await proyecserv.Crear(proyecto);
        navegate.NavigateTo("/Proyecto", true);
    }
    protected async Task Recomendar()
    {
        if (!await categoriaservice.existe(proyecto.idCategoria)){
            return;
        }
        proyecto = await proyecserv.Recomendar(proyecto); 
    }
    
}
